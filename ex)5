%pylab
%matplotlib inline
%load_ext watermark
%watermark -v -m -p scipy,sklearn,numpy
from sklearn import datasets
diabetes = datasets.load_diabetes()
print(diabetes.data.shape, diabetes.target.shape)
diabetes.target[:10]
diabetes.data[:5]
plt.scatter(diabetes.data[:,2], diabetes.target)
plt.xlabel('x')
plt.ylabel('y')
nl = numpy.array([2.0]*207+[1.0]*235)
norm = (nl - np.mean(nl))/np.var(nl)
norm2 = norm / np.sqrt(np.sum(np.square(norm)))
norm2[0], norm2[300]

from sklearn import preprocessing
norm2 = preprocessing.normalize(preprocessing.scale(nl).reshape(1, -1), norm='l2')
norm2[0, 0], norm2[0, 300]

from mpl_toolkits.mplot3d import axes3d

x = np.arange(-10., 10., 0.2)
y = np.arange(-10., 10., 0.2)
x = x.reshape(len(x), 1)
z = x * y

pylab.rcParams["figure.figsize"] = (10, 8)
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot_wireframe(x, y, z, rstride=6, cstride=6)
ax.scatter([5], [3], [15], c='r')
ax.quiver([5, 5], [3, 3], [15, 15], [1, 0], [0, 1], [3, 5], 
          length=7, color='red', pivot='tail')
ax.scatter([5], [-3], [-15], c='r')
ax.quiver([5, 5], [-3, -3], [-15, -15], [-1, 0], [0, 1], [3, 5], 
          length=7, color='red', pivot='tail')
ax.set_xlabel('W')
ax.set_ylabel('X')
ax.set_zlabel('W * X')
plt.gca().set_xlim([-10, 10])
plt.gca().set_ylim([-10, 10])
plt.gca().set_zlim([-100, 100])
plt.show()
